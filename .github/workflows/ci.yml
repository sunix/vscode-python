name: CI

on:
  push:
    branches:
      # Run the CI workflow only on master for microsoft/vscode-python for now.
      - main

env:
  PYTHON_VERSION: 3.8
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter). Also enables a reporter which exits the process running the tests if it haven't already.
  CACHE_NPM_DEPS: cache-npm
  CACHE_OUT_DIRECTORY: cache-out-directory
  CACHE_PIP_DEPS: cache-pip
  # Key for the cache created at the end of the the 'Cache ./pythonFiles/lib/python' step.
  CACHE_PYTHONFILES: cache-pvsc-pythonFiles
  ARTIFACT_NAME_VSIX: ms-python-insiders-vsix
  COVERAGE_REPORTS: tests-coverage-reports
  TEST_RESULTS_DIRECTORY: .
  LKG_TAG: ci-lkg

jobs:
  ### Initialization: retrieve, install and cache dependencies
  python-deps:
    name: Install Python Requirements
    runs-on: ubuntu-latest
    if: github.repository == 'sunix/vscode-python'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Show all env vars
        run: |
          printenv
        shell: bash

      - name: Use Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install Python requirements
        run: |
          python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade -r requirements.txt

      - name: Install debugpy with wheels
        run: |
          python -m pip install wheel
          python -m pip --disable-pip-version-check install -r build/debugger-install-requirements.txt
          python ./pythonFiles/install_debugpy.py

      # Retrieve the list of debugpy versions from PyPI in order to increase the specificity of the pip cache key,
      # so that the cache gets invalidated as necessary.
      # See https://github.com/microsoft/vscode-python/pull/9843#discussion_r373635221
      - name: curl PyPI to get debugpy versions
        run: curl --output debugpy.json https://pypi.org/pypi/debugpy/json

      - name: Cache pip files
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-${{env.CACHE_PIP_DEPS}}-pip-${{env.PYTHON_VERSION}}-${{hashFiles('requirements.txt')}}-${{hashFiles('build/debugger-install-requirements.txt')}}-${{hashFiles('debugpy.json')}}

      - name: Cache ./pythonFiles/lib/python
        uses: actions/cache@v1
        with:
          path: ./pythonFiles/lib/python
          key: ${{runner.os}}-${{env.CACHE_PYTHONFILES}}-pythonFiles-${{env.PYTHON_VERSION}}-${{hashFiles('requirements.txt')}}-${{hashFiles('build/debugger-install-requirements.txt')}}-${{hashFiles('debugpy.json')}}

  js-ts-deps:
    name: Install npm dependencies
    runs-on: ubuntu-latest
    if: github.repository == 'sunix/vscode-python'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install dependencies (npm ci)
        run: npm ci --prefer-offline

      - name: Cache npm files
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{runner.os}}-${{env.CACHE_NPM_DEPS}}-${{hashFiles('package-lock.json')}}

  build-vsix:
    name: Build VSIX
    runs-on: ubuntu-latest
    if: github.repository == 'sunix/vscode-python'
    needs: [python-deps, js-ts-deps]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Retrieve cached npm files
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{runner.os}}-${{env.CACHE_NPM_DEPS}}-${{hashFiles('package-lock.json')}}

      - name: curl PyPI to get debugpy versions
        run: curl --output debugpy.json https://pypi.org/pypi/debugpy/json

      - name: Retrieve cached pythonFiles/ directory
        uses: actions/cache@v1
        with:
          path: ./pythonFiles/lib/python
          key: ${{runner.os}}-${{env.CACHE_PYTHONFILES}}-pythonFiles-${{env.PYTHON_VERSION}}-${{hashFiles('requirements.txt')}}-${{hashFiles('build/debugger-install-requirements.txt')}}-${{hashFiles('debugpy.json')}}

      - name: Install dependencies (npm ci)
        run: npm ci --prefer-offline

      - name: Clean directory
        run: npm run clean

      # Use the GITHUB_RUN_ID environment variable to update the build number.
      # GITHUB_RUN_ID is a unique number for each run within a repository.
      # This number does not change if you re-run the workflow run.
      - name: Update build number
        run: npm run updateBuildNumber -- --buildNumber $GITHUB_RUN_ID

      - name: Package the VSIX
        run: npm run package

      - uses: actions/upload-artifact@v1
        with:
          name: ${{env.ARTIFACT_NAME_VSIX}}
          path: ms-python-insiders.vsix

